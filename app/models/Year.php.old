<?php

require __DIR__ . '/../../connection/Connection.php';
require __DIR__ . '/../../app/utils/Session.php';
require __DIR__ . '/../../app/models/Model.php';

class Year extends Model
{
    protected $table = 'anio';
    protected $connection;
    protected $session;

    public function __construct()
    {
        $this->session = new Session();
        $connection = new Connection();
        $this->connection = $connection->getConnection();
    }

    public function getYears()
    {
        $query = "SELECT a.codigo AS codigo, 
                    a.nombre AS nombre, 
                    mo.nombre_modelo AS modelo,
                    mo.codigo AS codigo_modelo
                FROM $this->table a, modelo mo 
                WHERE a.codigo_modelo = mo.codigo 
                ORDER BY codigo ASC";

        $result = mysqli_query($this->connection, $query);

        if (mysqli_num_rows($result) > 0) {
            $response = [];

            while ($row = mysqli_fetch_assoc($result)) {
                $response[] = $row;
            }

            return $response;
        }

        return [];
    }

    public function createYear($data): bool
    {
        try {
            // Iniciar transacción
            $this->connection->autocommit(false);

            $id = $this->getNextId($this->table, $this->connection);
            $name = htmlspecialchars(mysqli_real_escape_string($this->connection, $data['nombre']));
            $modelID = htmlspecialchars(mysqli_real_escape_string($this->connection, $data['codigo_modelo']));

            $query = "INSERT INTO $this->table (codigo, nombre, codigo_modelo) VALUES ('$id', '$name', '$modelID')";

            $result = mysqli_query($this->connection, $query);

            if ($result) {
                // Confirmar la transacción
                $this->connection->commit();
                $this->connection->autocommit(true);

                return true;
            } else {
                throw new Exception(mysqli_error($this->connection));
            }
        } catch (Exception $e) {
            // Realizar rollback en caso de error
            $this->connection->rollback();
            $this->connection->autocommit(true);

            // Registrar el error y retornar false
            $this->set($e, ['session_id' => $this->session->getSessionID()]);
            return false;
        }
    }

    public function updateYear($data): bool
    {
        try {
            // Iniciar transacción
            $this->connection->autocommit(false);

            $id = htmlspecialchars(mysqli_real_escape_string($this->connection, $data['codigo']));
            $name = htmlspecialchars(mysqli_real_escape_string($this->connection, $data['nombre']));
            $modelID = htmlspecialchars(mysqli_real_escape_string($this->connection, $data['codigo_modelo']));

            $query = "UPDATE $this->table SET nombre = '$name', codigo_modelo = '$modelID' WHERE codigo = '$id'";

            $result = mysqli_query($this->connection, $query);

            if ($result) {
                // Confirmar la transacción
                $this->connection->commit();
                $this->connection->autocommit(true);

                return true;
            } else {
                throw new Exception(mysqli_error($this->connection));
            }
        } catch (Exception $e) {
            // Realizar rollback en caso de error
            $this->connection->rollback();
            $this->connection->autocommit(true);

            // Registrar el error y retornar false
            $this->set($e, ['session_id' => $this->session->getSessionID()]);
            return false;
        }
    }

    public function deleteYear($data): bool
    {
        try {
            // Iniciar transacción
            $this->connection->autocommit(false);

            $id = htmlspecialchars(mysqli_real_escape_string($this->connection, $data['codigo']));

            $query = "DELETE FROM $this->table WHERE codigo = '$id'";

            $result = mysqli_query($this->connection, $query);

            if ($result) {
                // Confirmar la transacción
                $this->connection->commit();
                $this->connection->autocommit(true);

                $this->createLogbook($this->connection, "Año con codigo '$id' eliminado", "eliminación", "medio", "permitido", $this->session->getUserID());

                return true;
            } else {
                throw new Exception(mysqli_error($this->connection));
            }
        } catch (Exception $e) {
            // Realizar rollback en caso de error
            $this->connection->rollback();
            $this->connection->autocommit(true);

            // Registrar el error y retornar false
            $this->set($e, ['session_id' => $this->session->getSessionID()]);
            return false;
        }
    }

    public function getSession(): Session
    {
        return $this->session;
    }

    public function getConnection(): Connection
    {
        return $this->connection;
    }

    public function __destruct()
    {
        $this->connection->close();
    }
}
